# Define SciTE settings for Lune files.

file.patterns.lune=*.lune

*source.patterns.lune=$(file.patterns.lune);

shbang.lune=lua

filter.lune=Lune (lune)|$(file.patterns.lune)|

*filter.lune=$(filter.lune)

lexer.$(file.patterns.lune)=d

*language.lune=Lune|lune||

word.chars.lune=$(chars.alpha)$(chars.numeric)$(chars.accented)_%
word.characters.$(file.patterns.lune)=$(word.chars.lune)


# Keywords
keywordclass.lune=\
break continue else elif \
for function if in \
nil not class \
return while

keywords.$(file.patterns.lune)=$(keywordclass.lune)

indent.maintain.$(file.patterns.lune)=1

comment.block.lune=#~
comment.block.at.line.start.lune=1

# Lune styles

#Default
style.lune.32=$(font.code.base),fore:#000000
# White space: Visible only in View Whitespace mode (or if it has a back colour)
style.lune.0=fore:#FF0000
# Line comment
style.lune.2=$(colour.code.comment.line),$(font.code.comment.line)
# Doc comment -- Not used in Lua (yet?)
style.lune.3=$(colour.notused),$(font.notused)
# Number
style.lune.4=$(colour.number)
# Keyword
style.lune.5=$(colour.keyword)
# (Double quoted) String
style.lune.6=$(colour.string)
# Character (Single quoted string)
style.lune.7=$(colour.char)
# Literal string
style.lune.8=$(colour.string),$(font.code.comment.box),back:#E0FFFF
# Preprocessor (obsolete in Lua 4.0 and up)
style.lune.9=$(colour.preproc)
# Operators
style.lune.10=$(colour.operator)
# Identifier (everything else...)
style.lune.11=
# End of line where string is not closed
style.lune.12=back:#E0C0E0,eolfilled
# Other keywords (bozo test colors, but toned down ;)
style.lune.13=$(style.lune.5),back:#F5FFF5
style.lune.14=$(style.lune.5),back:#F5F5FF
style.lune.15=$(style.lune.5),back:#FFF5F5
style.lune.16=$(style.lune.5),back:#FFF5FF
style.lune.17=$(style.lune.5),back:#FFFFF5
style.lune.18=$(style.lune.5),back:#FFA0A0
style.lune.19=$(style.lune.5),back:#FFF5F5
# Labels
style.lune.20=fore:#7F7F00
# Braces are only matched in operator style
braces.lune.style=10

lune.command=java -jar Lune_app.jar
command.go.*.lune=$(lune.command) "$(FileNameExt)"

